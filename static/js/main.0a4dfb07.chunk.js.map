{"version":3,"sources":["components/navbar.js","components/Characters/characterDetails.js","components/Characters/Characters.js","components/Episodes/EpisodesCharactersPhoto.js","components/Episodes/EpisodesCharacters.js","components/Episodes/Episodes.js","components/Location/LocationResidentsFoto.js","components/Location/LocationResidents.js","components/Location/Location.js","components/MyWatchList/MyWatchList.js","components/MyWatchList/MyWatch.js","components/welcome.js","App.js","index.js"],"names":["Navbar","className","to","activeClassName","CharacterDetails","props","Character","characterDetails","Close","style","backgroundImage","image","backgroundSize","Button","variant","color","onClick","name","gender","location","origin","species","status","Characters","useState","allPages","setAllPages","page","setPage","character","setCharacters","setSpecies","setStatus","setGender","characterDetailsModal","setCharacterDetailsModal","setCharacterDetails","useEffect","fetch","then","response","json","data","info","pages","results","console","log","value","autoComplete","onChange","e","target","preventDefault","reset","map","el","detailsSet","backgroundColor","id","Pagination","count","event","EpisodesCharactersPhoto","url","setData","catch","EpisodesCharacters","details","characters","episode","air_date","slidesPerView","spaceBetween","i","SwiperCore","use","Episodes","setName","setEpisodes","title","TextField","label","type","LocationResidentsFoto","LocationResidents","residents","length","useStyles","makeStyles","theme","root","marginTop","spacing","Location","classes","setLocation","setResidents","setType","dimension","setDimension","MyWarchList","todosList","removeTodo","completeTodo","textDecoration","isCompleted","FormControlLabel","checked","control","Checkbox","startIcon","MyWarch","setValue","setTodos","newTodosList","localStorage","getItem","JSON","parse","required","Math","floor","random","setItem","stringify","endIcon","Icon","newTodos","filter","Welcome","App","exact","path","component","MyWatch","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a4dfb07.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './navbar.css'\r\n\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div className='Navbar'>\r\n            <NavLink to='/Rick-and-Morty'> \r\n                <h1>Rick and Morty test task</h1>\r\n            </NavLink> \r\n            \r\n            <ul className=\"nav-wrapper\">\r\n                <li> \r\n                    <NavLink to='/characters' activeClassName=\"selected\"> \r\n                        Characters\r\n                    </NavLink> \r\n                </li>\r\n                \r\n                <li> \r\n                    <NavLink to='/episodes' activeClassName=\"selected\"> \r\n                        Episodes \r\n                    </NavLink> \r\n                </li>\r\n\r\n                <li> \r\n                    <NavLink to='/locations' activeClassName=\"selected\"> \r\n                        Locations \r\n                    </NavLink> \r\n                </li>\r\n\r\n                <li> \r\n                    <NavLink to='/my-watch-list' activeClassName=\"selected\"> \r\n                        My watch list\r\n                    </NavLink>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './CharacterDetails.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function CharacterDetails(props) {\r\n    const Character = props.characterDetails\r\n\r\n    const {Close} = props;\r\n\r\n    return (\r\n        <div className='CharacterDetails'\r\n            style={{ backgroundImage:  `url(${Character.image && Character.image})`, backgroundSize: 'cover'  }}>\r\n\r\n            <div className=\"CharacterDetails-box\">\r\n\r\n                <div className=\"CharacterDetails-box-btn\">\r\n                    <Button \r\n                        variant=\"contained\" \r\n                        color=\"secondary\"\r\n                        onClick={()=> Close()}>\r\n                        X\r\n                    </Button>\r\n                </div>\r\n\r\n                <div className=\"CharacterDetails-box-elements\">\r\n                    <div>Name: {Character.name && Character.name}</div>\r\n                    <div>Gender: {Character.gender && Character.gender}</div>\r\n                    <div>Location: {Character.location.name && Character.location.name}</div>\r\n                    <div>Origin: { Character.origin.name && Character.origin.name}</div>\r\n                    <div>Species: { Character.species && Character.species}</div>\r\n                    <div>Status: { Character.status && Character.status}</div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport './Characters.css';\r\n\r\nimport CharacterDetails from './characterDetails';\r\n\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\nexport default function Characters() {\r\n    \r\n    const [allPages, setAllPages] = useState();\r\n    const [page, setPage] = useState(1);\r\n\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const [character, setCharacters] = useState([])\r\n\r\n    const [species, setSpecies] = useState('')\r\n    const [status, setStatus] = useState('')\r\n    const [gender, setGender] = useState('')\r\n\r\n    const [characterDetailsModal, setCharacterDetailsModal] = useState(false)\r\n    const [characterDetails, setCharacterDetails] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch(`https://rickandmortyapi.com/api/character?species=${species}&status=${status}&gender=${gender}&page=${page}`)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            setAllPages(data.info.pages);\r\n            setCharacters(data.results);\r\n            console.log(data);\r\n        });\r\n    }, [species, status, gender, page])\r\n\r\n    const reset = (e) => {\r\n        e.preventDefault();\r\n        setSpecies( '' )\r\n        setStatus( '' )\r\n        setGender( '' )\r\n    }\r\n\r\n    const detailsSet = (el) => {\r\n        setCharacterDetailsModal(true)\r\n        setCharacterDetails(el)\r\n    }\r\n    const detailsSetClose = () => {\r\n        setCharacterDetailsModal(false)\r\n    }\r\n    \r\n    return (\r\n        <div className='Characters'>\r\n            <h2> Characters </h2>\r\n\r\n            <form className=\"form-filters\">\r\n                \r\n                <label>\r\n                    Species: \r\n                    <select\r\n                        value={species}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setSpecies( e.target.value )}\r\n                        >\r\n                            <option value=\"\">-</option>\r\n                            <option value=\"Human\">Human</option>\r\n                            <option value=\"Alien\">Alien</option>\r\n                            <option value=\"Humanoid\">Humanoid</option>\r\n                    </select>\r\n                </label>\r\n\r\n                <label>\r\n                    Status: \r\n                    <select\r\n                        value={status}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setStatus( e.target.value )}\r\n                        >\r\n                            <option value=\"\">-</option>\r\n                            <option value=\"alive\">alive</option>\r\n                            <option value=\"dead \">dead </option>\r\n                            <option value=\"unknown\">unknown</option>\r\n                    </select>\r\n                </label>\r\n\r\n                <label>\r\n                    Gender: \r\n                    <select\r\n                        value={gender}\r\n                        autoComplete=\"off\"\r\n                        onChange={(e) => setGender( e.target.value )}\r\n                        >\r\n                            <option value=\"\">-</option>\r\n                            <option value=\"female\">female</option>\r\n                            <option value=\"male \">male </option>\r\n                            <option value=\"genderless \">genderless </option>\r\n                            <option value=\"unknown \">unknown </option>\r\n                    </select>\r\n                </label>\r\n\r\n                <Button variant=\"contained\" color=\"primary\"  onClick={ (e) => reset(e) }>\r\n                    Reset\r\n                </Button>\r\n            </form>\r\n\r\n            <div className=\"character-wrapper\">\r\n\r\n                {character && character.map( el => {\r\n                    return(\r\n                        <div onClick={ () => detailsSet(el) } className=\"character-item\" \r\n                            key={el.id}\r\n                            style={{ backgroundImage: `url(${el.image})` }}>\r\n                            <div className=\"character-item-status\">\r\n                                <span style={{ backgroundColor:\r\n                                    el.status === 'Alive' ? 'rgb(9, 67, 255, 0.501)' :  \r\n                                    el.status === 'Dead' ? 'rgb(19, 83, 85, 0.501)' : \r\n                                    el.status === 'unknown' ? 'rgb(226, 225, 214, 0.501)' : ''\r\n                                }}> {el.status} </span>\r\n                            </div>\r\n                            <div className=\"character-item-name\">\r\n                                {el.name}   \r\n                            </div>\r\n\r\n                            {el.status === 'Dead' ? <div className=\"line-middle\"></div> : null}\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n\r\n            <Pagination count={allPages} page={page} onChange={ handleChange } />\r\n\r\n            { characterDetailsModal \r\n            ? \r\n            <CharacterDetails \r\n                characterDetails={characterDetails}\r\n                Close={ ()=> detailsSetClose() }\r\n                /> \r\n            : \r\n            null }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport './EpisodesCharactersPhoto.css'\r\n\r\nexport default function EpisodesCharactersPhoto(props) {\r\n\r\n    const url = props.el\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        fetch( url )\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then(( data ) => {\r\n            setData(data)\r\n        })\r\n        .catch( () => console.log('clean') );\r\n        \r\n    }, [url])\r\n\r\n    return (\r\n        <div className='EpisodesCharactersPhoto'\r\n            style={{ backgroundImage: `url(${data.image && data.image})`, backgroundSize: 'cover'}}>\r\n            <div className=\"EpisodesCharactersPhoto\">\r\n                {data.name}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport EpisodesCharactersPhoto from './EpisodesCharactersPhoto';\r\nimport './EpisodesCharacters.css'\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\"\r\nimport \"swiper/components/navigation/navigation.min.css\"\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport SwiperCore, {Pagination} from 'swiper/core';\r\n  \r\n  SwiperCore.use([Pagination]);\r\n\r\nexport default function EpisodesCharacters(props) {\r\n\r\n    const details = props.characters\r\n    const characters = props.characters.characters\r\n    const {Close} = props;\r\n\r\n    return (\r\n        <div className='EpisodesCharacters'>\r\n            <div className=\"EpisodesCharacters-topBar\">\r\n                <h3>Episode</h3>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={()=> Close()}>\r\n                    X\r\n                </Button>\r\n            </div>\r\n            <div className=\"EpisodesCharacters-details\">\r\n                <div className=\"EpisodesCharacters-details-name\">\r\n                    Episode name: {details.name}\r\n                </div>\r\n                <div className=\"EpisodesCharacters-details-episode\">\r\n                    Episode: {details.episode}\r\n                </div>\r\n                <div className=\"EpisodesCharacters-details-air_date\">\r\n                    Relise: {details.air_date}\r\n                </div>\r\n            </div>\r\n            <h4>Episodes Characters</h4>\r\n            <Swiper\r\n                slidesPerView={'auto'} \r\n                spaceBetween={30}\r\n                className=\"mySwiper\">\r\n\r\n                \r\n                {characters && characters.map( (el, i) => {\r\n                    return(\r\n                        <SwiperSlide key={i}>\r\n                            <div className=\"EpisodesCharacters-item\">\r\n                                <EpisodesCharactersPhoto el={el} />\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    )\r\n                })\r\n                }\r\n            </Swiper>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport './Episodes.css';\r\nimport EpisodesCharacters from './EpisodesCharacters'\r\n\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\n\r\nexport default function Episodes() {\r\n\r\n    const [allPages, setAllPages] = useState();\r\n    const [page, setPage] = useState(1);\r\n\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const [name, setName] = useState( '' );\r\n    const [characters, setCharacters] = useState( [] );\r\n\r\n    const [characterDetailsModal, setCharacterDetailsModal] = useState(false)\r\n    \r\n    const [Episodes, setEpisodes] = useState([])\r\n\r\n    useEffect(() => { \r\n        fetch(`https://rickandmortyapi.com/api/episode?page=${ page }&name=${ name.title || '' }`)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then(( data ) => {\r\n            setAllPages(data.info.pages)\r\n            setEpisodes(data.results);\r\n        })\r\n        .catch( () => console.log('clean') );\r\n        \r\n    }, [page, name])\r\n\r\n    const detailsSet = (el) => {\r\n        setCharacterDetailsModal(true)\r\n        setCharacters(el)\r\n    } \r\n    const detailsSetClose = () => {\r\n        setCharacterDetailsModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className='Episodes'>\r\n\r\n            <TextField \r\n                id=\"standard-basic\" \r\n                label=\"Search Episodes\" \r\n                type=\"text\"\r\n                onChange={(e) => setName({ title: e.target.value })}\r\n            />\r\n\r\n            <div className=\"Episodes-wrapper\">\r\n                {Episodes && Episodes.map( el => {\r\n                    return(\r\n                        <div onClick={ ()=> detailsSet( el ) } className=\"Episodes-item\" key={el.id}>\r\n                            <div className=\"\"> { el.name && el.name } </div>\r\n                            <div className=\"\"> { el.air_date && el.air_date } </div>\r\n                            <div className=\"\"> { el.episode && el.episode } </div>\r\n                        </div>\r\n                    )\r\n                })\r\n                },\r\n                { characterDetailsModal \r\n                ? \r\n                <EpisodesCharacters characters={characters} Close={ ()=> detailsSetClose() }/>\r\n                : \r\n                null }\r\n            </div>\r\n\r\n            <Pagination count={allPages} page={page} onChange={ handleChange } />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport './LocationResidentsFoto.css'\r\n\r\nexport default function LocationResidentsFoto(props) {\r\n    \r\n    const url = props.el\r\n\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => { \r\n        fetch( url )\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then(( data ) => {\r\n            setData(data)\r\n        })\r\n        .catch( () => console.log('wrong') );\r\n        \r\n    }, [url])\r\n\r\n    return (\r\n        <div className='LocationResidentsFoto-wrapper'\r\n            style={{ backgroundImage: `url(${data.image && data.image})`, backgroundSize: 'cover'}}>\r\n            <div className=\"LocationResidentsFoto\">\r\n                {data.name}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './LocationResidents.css'\r\n\r\nimport LocationResidentsFoto from './LocationResidentsFoto';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport \"swiper/swiper.min.css\";\r\nimport \"swiper/components/pagination/pagination.min.css\"\r\nimport \"swiper/components/navigation/navigation.min.css\"\r\n\r\nimport SwiperCore, {Pagination} from 'swiper/core';\r\n  \r\n  SwiperCore.use([Pagination]);\r\n\r\nexport default function LocationResidents(props) {\r\n    const residents = props.residents.residents\r\n    const details = props.residents\r\n    \r\n    const {Close} = props;\r\n\r\n    return (\r\n        <div className='LocationResidents'>\r\n            <div className=\"LocationResidents-topBar\">\r\n                <h3>Location</h3>\r\n\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={()=> Close()}>\r\n                    X\r\n                </Button>\r\n\r\n            </div>\r\n\r\n            <div className=\"LocationResidents-details\">\r\n                <div className=\"EpisodesCharacters-details-name\">\r\n                    name: { details.name }\r\n                </div>\r\n                <div className=\"EpisodesCharacters-details-type\">\r\n                    type: { details.type }\r\n                </div>\r\n            </div>\r\n            <h3>Residents: </h3>\r\n            {residents && residents.length !== 0 \r\n                ? \r\n                <Swiper\r\n                    slidesPerView={'auto'} \r\n                    spaceBetween={30}\r\n                    className=\"mySwiper\">\r\n\r\n                    {residents && residents.map( (el, i) => {\r\n                        return(\r\n                            <SwiperSlide key={i}>\r\n                                <div className=\"LocationResidents-item\">\r\n                                    <LocationResidentsFoto el={el} />\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        )\r\n                    })\r\n                    }\r\n                </Swiper>\r\n                : \r\n                'nobody lives here'\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport './Location.css';\r\n\r\nimport LocationResidents from './LocationResidents'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function Location() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [allPages, setAllPages] = useState();\r\n    const [page, setPage] = useState(1);\r\n\r\n    const handleChange = (event, value) => {\r\n        setPage(value);\r\n    };\r\n\r\n    const [location, setLocation] = useState([])\r\n\r\n    const [residents, setResidents] = useState( [] );\r\n\r\n    const [characterDetailsModal, setCharacterDetailsModal] = useState(false)\r\n\r\n    const [name, setName] = useState( '' );\r\n    const [type, setType] = useState( '' );\r\n    const [dimension, setDimension] = useState( '' );\r\n\r\n    console.log(type);\r\n\r\n    useEffect(() => { \r\n        fetch(`https://rickandmortyapi.com/api/location?page=${ page }&type=${ type }&dimension=${ dimension }&name=${ name.title || '' }`)\r\n        .then((response) => {\r\n            return response.json();\r\n        })\r\n        .then(( data ) => {\r\n            setAllPages(data.info.pages)\r\n            setLocation(data.results);\r\n        })\r\n        .catch( () => console.log('wrong') );\r\n    }, [page, type, dimension, name])\r\n\r\n    const detailsSet = (el) => {\r\n        setResidents(el); \r\n        setCharacterDetailsModal(true)\r\n    }\r\n    const detailsSetClose = () => {\r\n        setCharacterDetailsModal(false)\r\n    }\r\n\r\n    const reset = (e) => {\r\n        e.preventDefault();\r\n        setDimension( '' )\r\n        setType( '' )\r\n        setName( '' )\r\n    }\r\n\r\n    return (\r\n        <div className=\"Location\">\r\n            <h1>Location</h1>\r\n\r\n\r\n            <form className=\"form-filters\" >\r\n\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Search location:\" \r\n                    type=\"text\"\r\n                    onChange={(e) => setName({ title: e.target.value })}\r\n                />\r\n\r\n                Type: \r\n                <select\r\n                    value={type}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setType( e.target.value )}>\r\n                        <option value=\"\">-</option>\r\n                        <option value=\"Planet\">Planet</option>\r\n                        <option value=\"Cluster\">Cluster</option>\r\n                        <option value=\"Space station\"> Space station</option>\r\n                        <option value=\"Microverse\"> Microverse</option>\r\n                        <option value=\"Resort\"> Resort</option>\r\n                        <option value=\"Fantasy town\"> Fantasy town</option>\r\n                        <option value=\"Dream\"> Space station</option>\r\n                        <option value=\"Microverse\"> Space station</option>\r\n                        <option value=\"unknown\"> unknown</option>\r\n                </select>\r\n\r\n                Dimension: \r\n                <select\r\n                    value={dimension}\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setDimension( e.target.value )}\r\n                    >\r\n                        <option value=\"\">-</option>\r\n                        <option value=\"Dimension C-137\">Dimension C-137</option>\r\n                        <option value=\"Fantasy Dimension \">Fantasy Dimension </option>\r\n                        <option value=\"Replacement Dimension\">Replacement Dimension</option>\r\n                        <option value=\"Cronenberg Dimension\"> Cronenberg Dimension</option>\r\n                        <option value=\"Dimension 5-126\"> Dimension 5-126</option>\r\n                </select>\r\n\r\n                <Button variant=\"contained\" color=\"primary\"  onClick={ (e) => reset(e) }>\r\n                    Reset\r\n                </Button>\r\n            </form>\r\n\r\n            <div className=\"Location-wrapper\">\r\n                {location && location.map( el => {\r\n                    return(\r\n\r\n                        <div onClick={ ()=> detailsSet( el ) } className=\"Location-item\" key={el.id}>\r\n                            <div className=\"\">name: { el.name && el.name } </div>\r\n                            <div className=\"\">type: { el.type && el.type } </div>\r\n                            { el.dimension !== 'unknown' ? <div className=\"\">dimension: { el.dimension && el.dimension } </div> : null }\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n                },\r\n\r\n                { characterDetailsModal \r\n                ? \r\n                <LocationResidents residents={residents}  Close={ ()=> detailsSetClose() } />\r\n                : \r\n                null }\r\n\r\n            </div>\r\n            \r\n            <div className={classes.root}>\r\n                <Pagination count={allPages} page={page} onChange={ handleChange } />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './MyWatchList.css';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\n\r\nexport default function MyWarchList({todosList, removeTodo, completeTodo}) {\r\n\r\n    return (\r\n        <div className='MyWarchList-wrapper'>\r\n            {todosList && todosList.map( (el, i) => {\r\n                return(\r\n                    <div key={i} \r\n                        className=\"MyWarchList-item\" style={{ \r\n                        textDecoration: el.isCompleted ? \"line-through\" : \"none\",\r\n                        color: el.isCompleted ? \"green\" : \"\" }}>\r\n                        \r\n                        <FormControlLabel\r\n                            onChange={() => completeTodo(el.id)} checked={el.isCompleted}\r\n                            control={<Checkbox color=\"primary\" />}\r\n                        />\r\n\r\n                        <div className=\"MyWarchList-item-text\">\r\n                            {el.value} \r\n                        </div>  \r\n\r\n                        <Button\r\n                            onClick={() => removeTodo(el.id)} \r\n                            title=\"Remove task from list\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={<DeleteIcon />}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport './MyWatch.css'\r\nimport MyWatchList from './MyWatchList'\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\n\r\nexport default function MyWarch() {\r\n\r\n    const [value, setValue] = useState('');\r\n    const [todosList, setTodos] = useState( [] );\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setValue(\"\");\r\n\r\n        const newTodosList = [ ...todosList, {id:Math.floor(Math.random() * 100), value, isCompleted: false }];\r\n        setTodos(newTodosList);\r\n\r\n        localStorage.setItem(\"todos\", JSON.stringify(newTodosList));\r\n    }\r\n\r\n    useEffect( () => {\r\n        const newTodosList = localStorage.getItem(\"todos\") \r\n        setTodos(newTodosList ? JSON.parse(newTodosList) : []) \r\n    }, [])\r\n\r\n\r\n    const removeTodo = id => {\r\n        const newTodos = todosList.filter(el => el.id !== id) ;\r\n        setTodos(newTodos);\r\n\r\n        localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n    }\r\n    const completeTodo = id => {\r\n        const newTodos = todosList.map(el => {\r\n            if(el.id === id) {\r\n                el.isCompleted = !el.isCompleted\r\n            }\r\n            return el\r\n        })\r\n        setTodos(newTodos);\r\n\r\n        localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='MyWarchList'>\r\n            <h1>MyWarchList</h1>\r\n\r\n            <form className=\"form-filters\">\r\n\r\n                <TextField \r\n                    id=\"standard-basic\" \r\n                    label=\"Enter text\" \r\n                    required\r\n                    type=\"text\"\r\n                    value={value}    \r\n                    onChange={e => setValue(e.target.value)}\r\n                />\r\n                \r\n                <Button\r\n                    onClick={handleSubmit}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    endIcon={<Icon>send</Icon>}\r\n                >\r\n                    Send\r\n                </Button>\r\n            </form>\r\n\r\n            {todosList.length >= 1 \r\n            ? \r\n            null\r\n            :\r\n            <div className=\"notice\"\r\n            > Add yor notice </div> \r\n            }\r\n\r\n            <MyWatchList \r\n                className='MyWarchList' \r\n                todosList={todosList} \r\n                removeTodo={removeTodo} \r\n                completeTodo={completeTodo}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './welcome.css'\r\n\r\nexport default function Welcome() {\r\n    return (\r\n        <div className='welcome'>\r\n            <h1>Learn more about your favorite cartoon!</h1>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/navbar';\nimport Characters from './components/Characters/Characters';\nimport Episodes from './components/Episodes/Episodes';\nimport Location from './components/Location/Location';\nimport MyWatch from './components/MyWatchList/MyWatch';\nimport Welcome from './components/welcome';\n\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar/>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/Rick-and-Morty' component={Welcome}/>\n          <Route path='/characters' component={Characters}/>\n          <Route path='/episodes' component={Episodes}/>\n          <Route path='/locations' component={Location}/>\n          <Route path='/my-watch-list' component={MyWatch}/>\n        </Switch>\n        \n        <footer>\n          <div className=\"footer-wrapper\">\n            <h3> DEVELOPER: OLEH KALYNOVSKYI </h3>\n            <a href=\"mailto:oleh.kalynovskyi@gmail.com\">Contact me: oleh.kalynovskyi@gmail.com</a>\n            <a href=\"https://github.com/oleh-kalynovskyi\">My portfolio on Github</a>\n          </div>\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}